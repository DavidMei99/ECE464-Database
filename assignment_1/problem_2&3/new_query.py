# ECE464 Database Problem Set 1
# Di Mei
# new_query.py (for Part 3)
# test of new queries

from new_tables import Base, Sailors, Reserves, Boats, Employees, Maintenance
from sqlalchemy import create_engine, func, and_
from sqlalchemy.orm import sessionmaker

engine = create_engine('sqlite:///new_sailors.db')
Session = sessionmaker(bind = engine)
session = Session()

# compare sql query results generated by raw mysql queries and sqlalchemy objects
def check(raw_query, orm_result):
    # store results in lists first
    raw_list, new_list = [], []
    with engine.connect() as connection:
        raw_result = connection.execute(raw_query)
        for x in raw_result:
            raw_list.append(x)
    for x in orm_result:
        new_list.append(x)
    # if generated results are different, report AssertionError
    assert raw_list == new_list

# a simple query test
def test1():
    q = session.query(func.avg(Maintenance.cost))
    raw_query = "SELECT AVG(cost) FROM maintenance;"
    check(raw_query, q)

# a simple query test
def test2():
    q = session.query(Employees.eid, Boats.bid, Maintenance.mdate).filter(and_(Employees.eid == Maintenance.eid, Boats.bid == Maintenance.bid))
    raw_query = "SELECT e.eid, b.bid, mdate FROM employees e, maintenance m, boats b WHERE e.eid = m.eid AND b.bid == m.bid;"
    check(raw_query, q)

if  __name__ == "__main__":
    test1()
    test2()
